# Configuration file
# key = value
## Ports
quarkus.http.port=8090

# Datasource
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.max-size=16
quarkus.datasource.username=droneshopadmin
quarkus.datasource.password=postgres
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.default-schema=droneshop
quarkus.hibernate-orm.sql-load-script=import.sql
quarkus.hibernate-orm.database.generation=drop-and-create

%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/droneshopdb?currentSchema=droneshop&search_path=droneshop
quarkus.hibernate-orm.packages=io.quarkusdroneshop.counter.domain

%prod.quarkus.datasource.jdbc.url=${PGSQL_URL}
%prod.quarkus.datasource.username=${PGSQL_USER}
%prod.quarkus.datasource.password=${PGSQL_PASS}
%prod.quarkus.hibernate-orm.log.sql=true

%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:default;DB_CLOSE_DELAY=-1
%test.quarkus.hibernate-orm.log.sql=true
%test.quarkus.hibernate-orm.database.generation=drop-and-create

# Logging
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.format=%-5p [%c{2.}] (%t) %s%e%n
quarkus.log.level=DEBUG
%prod.quarkus.log.level=${QUARKUS_LOG_LEVEL}
%prod.io.quarkusdroneshop.log.level=${QUARKUSDRONESHOP_LOG_LEVEL}
quarkus.log.category."io.quarkusdroneshop".level=DEBUG
quarkus.log.category."org.mockito".level=DEBUG
quarkus.log.category."io.quarkus.test".level=DEBUG
%test.quarkus.log.category."org.apache.kafka".level=ERROR

# Debezium
# Available configuration properties that can be tweaked
# Buildtime configuration:
# quarkus.debezium-outbox.table-name=OUTBOX_EVENTS
# quarkus.debezium-outbox.id.name=ID
# quarkus.debezium-outbox.id.column-definition=UUID NOT NULL
# quarkus.debezium-outbox.aggregate-id.name=AGGREGATE_ID
# quarkus.debezium-outbox.aggregate-id.column-definition=VARCHAR(50) NOT NULL
# quarkus.debezium-outbox.aggregate-id.converter=com.company.AggregateIdConverter
# quarkus.debezium-outbox.aggregate-type.name=AGGREGATE_TYPE
# quarkus.debezium-outbox.aggregate-type.column-definition=VARCHAR(75) NOT NULL
# quarkus.debezium-outbox.aggregate-type.converter=com.company.AggregateTypeConverter
# quarkus.debezium-outbox.type.name=TYPE
# quarkus.debezium-outbox.type.column-definition=VARCHAR(50) NOT NULL
# quarkus.debezium-outbox.type.converter=com.company.TypeConverter
# quarkus.debezium-outbox.timestamp.name=TIMESTAMP
# quarkus.debezium-outbox.timestamp.column-definition=TIMESTAMP NOT NULL
# quarkus.debezium-outbox.timestamp.converter=com.company.TimestampConverter
# quarkus.debezium-outbox.payload.name=JSON
# quarkus.debezium-outbox.payload.column-definition=JSONB
# quarkus.debezium-outbox.payload.converter=com.company.JsonbConverter

# Runtime configuration:
quarkus.debezium-outbox.remove-after-insert=false
quarkus.transaction-manager.enabled=true

#Kafka
# Configure the SmallRye Kafka connector
auto.create.topics.enable=true
%prod.kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}
%dev.kafka.bootstrap.servers=localhost:9092

## Orders
### orders-in topic receives messages from the web or other order sources
mp.messaging.incoming.orders-in.connector=smallrye-kafka
mp.messaging.incoming.orders-in.topic=orders-in
mp.messaging.incoming.orders-in.value.deserializer=io.quarkusdroneshop.infrastructure.PlaceOrderCommandDeserializer

## DataMeshの場合、Topicにサイト名を追加
### orders-up topic receives messages from the QDCA10 and QDCA10Pro microservices
mp.messaging.incoming.orders-up.connector=smallrye-kafka
%prod.mp.messaging.incoming.orders-up.topic=shop-bsite.orders-up
%dev.mp.messaging.incoming.orders-up.topic=orders-up
mp.messaging.incoming.orders-up.value.deserializer=io.quarkusdroneshop.infrastructure.TicketUpDeserializer

## QDCA10
mp.messaging.outgoing.qdca10.connector=smallrye-kafka
mp.messaging.outgoing.qdca10.topic=qdca10-in
mp.messaging.outgoing.qdca10.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.qdca10.merge=true

## QDCA10Pro
mp.messaging.outgoing.qdca10pro.connector=smallrye-kafka
mp.messaging.outgoing.qdca10pro.topic=qdca10pro-in
mp.messaging.outgoing.qdca10pro.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.qdca10pro.merge=true

# Web
mp.messaging.outgoing.web-updates.connector=smallrye-kafka
mp.messaging.outgoing.web-updates.topic=web-updates
mp.messaging.outgoing.web-updates.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.web-updates.merge=true
